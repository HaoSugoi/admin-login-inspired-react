
import { useState } from 'react';
import { useReportApi } from './useReportApi';

export const useStatsManagement = () => {
  const [activeSection, setActiveSection] = useState('stats');
  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);
  
  // Sá»­ dá»¥ng API tháº­t tá»« Backend
  const {
    bookStatistics,
    isLoadingBookStats,
    bookStatsError,
    refetchBookStats,
    isLoadingAny,
    hasError
  } = useReportApi();

  // Xá»­ lÃ½ dá»¯ liá»‡u tá»« API hoáº·c fallback data
  const processedStatistics = bookStatistics ? {
    // Dá»¯ liá»‡u tá»•ng quan
    totalRevenue: (bookStatistics.overview?.totalRentBookValue || 0) + (bookStatistics.overview?.totalSaleBookValue || 0),
    totalOrders: (bookStatistics.overview?.totalRentBookItems || 0),
    totalBooks: (bookStatistics.overview?.totalRentBooks || 0) + (bookStatistics.overview?.totalSaleBooks || 0),
    totalUsers: 245, // ChÆ°a cÃ³ trong API, giá»¯ nguyÃªn mock data
    
    // Dá»¯ liá»‡u hÃ´m nay
    todayRevenue: (bookStatistics.daily?.rentBookValueToday || 0) + (bookStatistics.daily?.saleBookValueToday || 0),
    todayOrders: (bookStatistics.daily?.rentBooksToday || 0) + (bookStatistics.daily?.saleBooksToday || 0),
    
    // Dá»¯ liá»‡u tuáº§n nÃ y
    weekRevenue: (bookStatistics.weekly?.rentBookValueThisWeek || 0) + (bookStatistics.weekly?.saleBookValueThisWeek || 0),
    weekOrders: (bookStatistics.weekly?.rentBooksThisWeek || 0) + (bookStatistics.weekly?.saleBooksThisWeek || 0),
    
    // Dá»¯ liá»‡u thÃ¡ng nÃ y
    monthRevenue: (bookStatistics.monthly?.rentBookValueThisMonth || 0) + (bookStatistics.monthly?.saleBookValueThisMonth || 0),
    monthOrders: (bookStatistics.monthly?.rentBooksThisMonth || 0) + (bookStatistics.monthly?.saleBooksThisMonth || 0),
    
    // Dá»¯ liá»‡u biá»ƒu Ä‘á»“ (mock data cho biá»ƒu Ä‘á»“ - cÃ³ thá»ƒ táº¡o endpoint riÃªng sau)
    monthlyData: [
      { period: "ThÃ¡ng 1", value: 850 },
      { period: "ThÃ¡ng 2", value: 1200 },
      { period: "ThÃ¡ng 3", value: 780 },
      { period: "ThÃ¡ng 4", value: 1050 },
      { period: "ThÃ¡ng 5", value: 1380 },
      { period: "ThÃ¡ng 6", value: 950 }
    ]
  } : {
    // Fallback data khi chÆ°a cÃ³ API response
    totalRevenue: 0,
    totalOrders: 0,
    totalBooks: 0,
    totalUsers: 0,
    todayRevenue: 0,
    todayOrders: 0,
    weekRevenue: 0,
    weekOrders: 0,
    monthRevenue: 0,
    monthOrders: 0,
    monthlyData: []
  };

  // Log Ä‘á»ƒ debug
  console.log('ðŸ“‹ Stats Management Data:', {
    bookStatistics,
    processedStatistics,
    isLoadingBookStats,
    bookStatsError: bookStatsError?.message
  });

  const toggleSidebar = () => {
    setSidebarCollapsed(!sidebarCollapsed);
  };

  const handleLogout = () => {
    console.log('Logging out...');
  };

  const handleRefreshStats = () => {
    console.log('ðŸ”„ Refreshing statistics...');
    refetchBookStats();
  };

  return {
    activeSection,
    setActiveSection,
    sidebarCollapsed,
    toggleSidebar,
    
    // Dá»¯ liá»‡u thá»‘ng kÃª Ä‘Ã£ xá»­ lÃ½
    statistics: processedStatistics,
    
    // Raw data tá»« API (Ä‘á»ƒ debug)
    rawBookStatistics: bookStatistics,
    
    // Loading vÃ  error states
    isLoading: isLoadingBookStats || isLoadingAny,
    error: bookStatsError || hasError,
    
    // Actions
    handleLogout,
    handleRefreshStats
  };
};
